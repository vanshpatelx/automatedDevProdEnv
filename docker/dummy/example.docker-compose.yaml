version: '3.8'

networks:
  dummy_network:
    driver: bridge

services:
  app:
    container_name: DummyService
    image: ${IMAGE}
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: "postgres"
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PORT: ${PORT}
    ports:
      - "${PORT}:${PORT}"
    networks:
      - dummy_network

  postgres:
    container_name: ${POSTGRES_CONTAINER}
    image: ${POSTGRES_IMAGE}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - dummy_network

  redis:
    container_name: ${REDIS_CONTAINER}
    image: ${REDIS_IMAGE}
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dummy_network

volumes:
  pg_data:
  redis_data:
