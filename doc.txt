Auth Server - Responsible for creating tokens
- We can decode token to any service
- As cache we use redis cache users details like
email, Id and password only.
- we have to send to pub-sub when needed

endpoints
: login
: signup

docker-Compose command when to start it
docker compose -f 'docker/auth/docker-compose.yaml' up -d --build 
docker compose -f 'docker/auth/docker-compose.resources.yaml' up -d --build 

// restart
docker compose -f 'docker/auth/docker-compose.yaml' down -v && docker compose -f 'docker/auth/docker-compose.yaml' up -d --build
docker compose -f 'docker/auth/docker-compose.resources.yaml' down -v && docker compose -f 'docker/auth/docker-compose.resources.yaml' up -d --build


Register
✅ Zod validations
✅ Check in cache user is Registered
✅ Check in DB
✅ ID Gen
✅ Add in Cache
✅ Send to pubsub
✅ generate token

login logic
✅ Zod validations
✅ Check in cache user is Registered and password check if exist and generate token
✅ Check in DB user is Registered and password check if exist and generate token
✅ generate token


Design whole Dev and Product Env
- Normal test
- Integration test
- docker compose for all services for production or dev check
- resources.sh scripts for all service for local dev purpose
- common docker compose file for all pub-sub indepedent resources



Understand Deeply, How everything works in env
- Dev
    - indepedent service run with resources
    - indepedent service with dockers all
    - All service together
- production
    - K8s all files runs
    - Version change



docker build -f docker/auth/Dockerfile -t service2-image .

docker compose -f docker-compose.resources.yaml up -d 
docker compose -f docker-compose.resources.yaml down 

~ ❯ curl -X POST http://localhost:5001/auth/register \
     -H "Content-Type: application/json" \
     -d '{"email": "test@example.com", "password": "password123"}'

~ ❯ curl -X POST http://localhost:5001/auth/login \                                                                                                      Py base Node system 06:31:17 PM
     -H "Content-Type: application/json" \
     -d '{"email": "test@example.com", "password": "password123"}'


