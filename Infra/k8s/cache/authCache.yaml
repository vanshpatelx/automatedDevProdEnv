# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: authcache-secrets
  namespace: cache
type: Opaque
data:
  REDIS_PASSWORD: cGFzc3dvcmQ=  # base64 for 'password'
---
# StatefulSet (Redis)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: auth-redis
  namespace: cache
spec:
  serviceName: auth-redis
  replicas: 1
  selector:
    matchLabels:
      app: auth-redis
  template:
    metadata:
      labels:
        app: auth-redis
    spec:
      restartPolicy: Always
      containers:
        - name: redis
          image: redis:latest
          command: 
            - "redis-server"
            - "--requirepass"
            - "$(REDIS_PASSWORD)"
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: authcache-secrets
                  key: REDIS_PASSWORD
          livenessProbe:
            exec:
              command: ["redis-cli", "-a", "$(REDIS_PASSWORD)", "ping"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["redis-cli", "-a", "$(REDIS_PASSWORD)", "ping"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: auth-redis-pvc
---
# PersistentVolumeClaim (Redis)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-redis-pvc
  namespace: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Headless Service (Redis)
apiVersion: v1
kind: Service
metadata:
  name: auth-redis
  namespace: cache
spec:
  selector:
    app: auth-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  clusterIP: None
